import { NextureIconsProps, sizeHelper, strokeSizeHelper } from "../nexture-icons";

export default function NiDocumentCross({
  className,
  variant = "outlined",
  size = "medium",
  oneTone = false,
}: NextureIconsProps) {
  const iconSize = sizeHelper(size);
  const iconStrokeWidth = strokeSizeHelper(iconSize);

  if (variant === "outlined") {
    return (
      <svg
        width={iconSize}
        height={iconSize}
        className={className}
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M3.36984 8.67144C3.73938 5.34558 6.39015 2.70123 9.71063 2.28617V2.28617C11.2181 2.09774 12.7819 2.09774 14.2894 2.28617V2.28617C17.6099 2.70123 20.2606 5.34558 20.6302 8.67144V8.67144C20.876 10.8837 20.876 13.1163 20.6302 15.3286V15.3286C20.2606 18.6544 17.6099 21.2988 14.2894 21.7138V21.7138C12.7819 21.9023 11.2181 21.9023 9.71063 21.7138V21.7138C6.39015 21.2988 3.73938 18.6544 3.36984 15.3286V15.3286C3.12404 13.1163 3.12404 10.8837 3.36984 8.67144V8.67144Z"
          stroke="currentColor"
          strokeWidth={iconStrokeWidth}
        />
        <path
          opacity={oneTone ? 1 : 0.6}
          d="M10.0001 10L12.0001 12M12.0001 12L14.0002 14.0001M12.0001 12L14.0001 10M12.0001 12L10 14.0001"
          stroke="currentColor"
          strokeWidth={iconStrokeWidth}
          strokeLinecap="round"
        />
      </svg>
    );
  } else {
    return (
      <svg
        width={iconSize}
        height={iconSize}
        className={className}
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M9.61664 1.5416C11.1856 1.3455 12.8133 1.34551 14.3823 1.5416C18.0404 1.99914 20.9665 4.91154 21.3754 8.5875C21.6273 10.8546 21.6273 13.1437 21.3754 15.4107C20.9669 19.0872 18.0407 22 14.3823 22.4576C12.8132 22.6537 11.1857 22.6537 9.61664 22.4576C5.95831 21.9999 3.03196 19.0871 2.62347 15.4107C2.37163 13.1437 2.37158 10.8545 2.62347 8.5875C3.03238 4.91162 5.95865 1.99926 9.61664 1.5416ZM14.5307 9.47031C14.2378 9.17746 13.763 9.17743 13.4702 9.47031L12.0004 10.94L10.5307 9.47031C10.2378 9.17746 9.76303 9.17743 9.47015 9.47031C9.1956 9.74491 9.17813 10.1797 9.41839 10.4742L9.47015 10.5309L10.9399 12.0006L9.47015 13.4703C9.17728 13.7632 9.17731 14.238 9.47015 14.5309C9.76308 14.8233 10.238 14.8236 10.5307 14.5309L12.0004 13.0611L13.4702 14.5309C13.7631 14.8233 14.238 14.8236 14.5307 14.5309C14.8234 14.2381 14.8231 13.7632 14.5307 13.4703L13.061 12.0006L14.5307 10.5309C14.8234 10.2381 14.8231 9.76324 14.5307 9.47031Z"
          fill="currentColor"
        />
        <path
          opacity={oneTone ? 0 : 0.4}
          d="M13.4698 9.46965C13.7627 9.17677 14.2375 9.1768 14.5304 9.46965C14.8232 9.76254 14.8232 10.2373 14.5304 10.5302L13.0606 11.9999L14.5304 13.4697C14.8232 13.7625 14.8232 14.2373 14.5304 14.5302C14.2375 14.8231 13.7627 14.8231 13.4698 14.5302L12.0001 13.0605L10.5304 14.5302C10.2375 14.8231 9.7627 14.8231 9.46981 14.5302C9.17697 14.2373 9.17693 13.7625 9.46981 13.4697L10.9395 11.9999L9.46981 10.5302L9.41805 10.4736C9.17779 10.179 9.19526 9.74424 9.46981 9.46965C9.76269 9.17677 10.2375 9.1768 10.5304 9.46965L12.0001 10.9394L13.4698 9.46965Z"
          fill="currentColor"
        />
      </svg>
    );
  }
}
