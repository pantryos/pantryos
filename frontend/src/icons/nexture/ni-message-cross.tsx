import { NextureIconsProps, sizeHelper, strokeSizeHelper } from "../nexture-icons";

export default function NiMessageCross({
  className,
  variant = "outlined",
  size = "medium",
  oneTone = false,
}: NextureIconsProps) {
  const iconSize = sizeHelper(size);
  const iconStrokeWidth = strokeSizeHelper(iconSize);

  if (variant === "outlined") {
    return (
      <svg
        width={iconSize}
        height={iconSize}
        className={className}
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M16.1899 2.46542C19.0216 2.78005 21.2817 4.97064 21.6846 7.7911C21.8939 9.25619 21.8939 10.7436 21.6846 12.2087C21.2817 15.0292 19.0216 17.2197 16.1899 17.5344L15.3667 17.6258C13.7801 17.8021 12.1831 17.8534 10.5904 17.7797C10.2263 17.7628 9.8785 17.9374 9.6821 18.2444L7.84289 21.1197C7.30446 21.9615 6.00049 21.5801 6.00049 20.5808V17.7058C6.00049 17.3083 5.76109 16.9548 5.41544 16.7583C3.77283 15.8249 2.5957 14.1689 2.31567 12.2087C2.10637 10.7436 2.10637 9.25619 2.31567 7.7911C2.71859 4.97064 4.9787 2.78005 7.81037 2.46542L8.63356 2.37396C10.871 2.12535 13.1292 2.12535 15.3667 2.37396L16.1899 2.46542Z"
          stroke="currentColor"
          strokeWidth={iconStrokeWidth}
        />
        <path
          opacity={oneTone ? 1 : 0.6}
          d="M10.0001 8L12.0001 10M12.0001 10L14.0002 12.0001M12.0001 10L14.0001 8M12.0001 10L10 12.0001"
          stroke="currentColor"
          strokeWidth={iconStrokeWidth}
          strokeLinecap="round"
        />
      </svg>
    );
  } else {
    return (
      <svg
        width={iconSize}
        height={iconSize}
        className={className}
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M8.5502 1.62852C10.8426 1.37384 13.1572 1.37381 15.4496 1.62852L16.2729 1.71934C19.444 2.07192 21.9756 4.52569 22.4272 7.68419C22.6465 9.21936 22.6464 10.7789 22.4272 12.3141C21.9759 15.4729 19.4442 17.9262 16.2729 18.2789L15.4496 18.3707C13.8242 18.5513 12.1876 18.6044 10.5561 18.5289C10.452 18.5241 10.3615 18.574 10.3139 18.6481L8.47501 21.5231C7.53278 22.9961 5.25058 22.3292 5.2504 20.5807V17.7057C5.2502 17.6202 5.19437 17.4951 5.04434 17.4098C3.20552 16.3647 1.88635 14.5099 1.57266 12.3141C1.35342 10.7789 1.35335 9.21938 1.57266 7.68419C2.0243 4.52555 4.55661 2.07171 7.72794 1.71934L8.5502 1.62852ZM14.5297 7.47032C14.2368 7.17747 13.762 7.17744 13.4691 7.47032L11.9994 8.94005L10.5297 7.47032C10.2368 7.17747 9.76203 7.17744 9.46915 7.47032C9.19504 7.74494 9.17726 8.17983 9.41739 8.47423L9.46915 8.53087L10.9389 10.0006L9.46915 11.4703C9.17673 11.7632 9.17646 12.2381 9.46915 12.5309C9.76189 12.8236 10.2368 12.8233 10.5297 12.5309L11.9994 11.0611L13.4691 12.5309C13.7619 12.8236 14.2368 12.8233 14.5297 12.5309C14.8226 12.238 14.8226 11.7632 14.5297 11.4703L13.06 10.0006L14.5297 8.53087C14.8226 8.23797 14.8226 7.76321 14.5297 7.47032Z"
          fill="currentColor"
        />
        <path
          opacity={oneTone ? 0 : 0.4}
          d="M13.4698 7.46965C13.7627 7.17677 14.2375 7.1768 14.5304 7.46965C14.8232 7.76254 14.8232 8.2373 14.5304 8.5302L13.0606 9.99992L14.5304 11.4697C14.8232 11.7625 14.8232 12.2373 14.5304 12.5302C14.2375 12.8231 13.7627 12.8231 13.4698 12.5302L12.0001 11.0605L10.5304 12.5302C10.2375 12.8231 9.7627 12.8231 9.46981 12.5302C9.17697 12.2373 9.17693 11.7625 9.46981 11.4697L10.9395 9.99992L9.46981 8.5302L9.41805 8.47356C9.17779 8.17899 9.19526 7.74424 9.46981 7.46965C9.76269 7.17677 10.2375 7.1768 10.5304 7.46965L12.0001 8.93938L13.4698 7.46965Z"
          fill="currentColor"
        />
      </svg>
    );
  }
}
