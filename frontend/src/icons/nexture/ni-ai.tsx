import { NextureIconsProps, sizeHelper, strokeSizeHelper } from "../nexture-icons";

export default function NiAI({ className, variant = "outlined", size = "medium", oneTone = false }: NextureIconsProps) {
  const iconSize = sizeHelper(size);
  const iconStrokeWidth = strokeSizeHelper(iconSize);

  if (variant === "outlined") {
    return (
      <svg
        width={iconSize}
        height={iconSize}
        className={className}
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M12.022 2C12.022 6 6 12 2 12C6 12 12.022 18 12.022 22C12.022 18 18 12 22 12C18 12 12.022 6 12.022 2Z"
          stroke="currentColor"
          strokeWidth={iconStrokeWidth}
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <path
          opacity={oneTone ? 1 : 0.6}
          d="M4.5055 2C4.5055 3 3 4.49999 2 4.49999C3 4.49999 4.5055 6 4.5055 7C4.5055 6 6 4.49999 7 4.49999C6 4.49999 4.5055 3 4.5055 2Z"
          stroke="currentColor"
          strokeWidth={iconStrokeWidth}
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </svg>
    );
  } else {
    return (
      <svg
        width={iconSize}
        height={iconSize}
        className={className}
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M12.0225 1.25C12.4104 1.25023 12.73 1.54501 12.7686 1.92285L12.7725 2L12.7871 2.31738C12.8552 3.07593 13.1593 3.95566 13.6748 4.88672C14.2589 5.9416 15.086 7.01211 16.042 7.9707C16.998 8.92928 18.0655 9.75886 19.1182 10.3447C20.18 10.9357 21.1751 11.25 22 11.25C22.4142 11.25 22.75 11.5858 22.75 12C22.75 12.4142 22.4142 12.75 22 12.75C21.1751 12.75 20.18 13.0643 19.1182 13.6553C18.0655 14.2411 16.998 15.0707 16.042 16.0293C15.086 16.9879 14.2589 18.0584 13.6748 19.1133C13.0856 20.1773 12.7725 21.1743 12.7725 22L12.7686 22.0771C12.73 22.455 12.4104 22.7498 12.0225 22.75C11.6343 22.75 11.315 22.4551 11.2764 22.0771L11.2725 22L11.2568 21.6826C11.1883 20.9251 10.8822 20.0462 10.3633 19.1152C9.77533 18.0604 8.94291 16.9901 7.98145 16.0312C7.01997 15.0724 5.94673 14.2425 4.88965 13.6562C3.95656 13.1388 3.07584 12.8329 2.31738 12.7646L2 12.75L1.92285 12.7461C1.54489 12.7075 1.25002 12.3882 1.25 12C1.25 11.5858 1.58579 11.25 2 11.25L2.31738 11.2354C3.07585 11.1671 3.95656 10.8612 4.88965 10.3438C5.94673 9.75755 7.01997 8.92759 7.98145 7.96875C8.94291 7.0099 9.77532 5.9396 10.3633 4.88477C10.9564 3.82061 11.2725 2.82447 11.2725 2C11.2725 1.58579 11.6082 1.25 12.0225 1.25Z"
          fill="currentColor"
        />
        <path
          opacity={oneTone ? 1 : 0.4}
          d="M4.50586 1.25C4.89388 1.25018 5.21336 1.54498 5.25195 1.92285L5.25586 2L5.2627 2.07129C5.2778 2.15664 5.3197 2.28409 5.41113 2.44922C5.52805 2.66033 5.70119 2.88714 5.90918 3.0957C6.11707 3.30411 6.34244 3.47765 6.55273 3.59473C6.77234 3.71696 6.92505 3.75 7 3.75C7.41421 3.75 7.75 4.08579 7.75 4.5C7.75 4.91421 7.41421 5.25 7 5.25C6.92505 5.25 6.77234 5.28304 6.55273 5.40527C6.34244 5.52236 6.11707 5.69589 5.90918 5.9043C5.70119 6.11286 5.52805 6.33967 5.41113 6.55078C5.28915 6.77108 5.25586 6.92428 5.25586 7L5.25195 7.07715C5.21336 7.45502 4.89388 7.74982 4.50586 7.75C4.11771 7.75 3.7984 7.4551 3.75977 7.07715L3.75586 7L3.74805 6.92969C3.73297 6.84507 3.69169 6.71796 3.59961 6.55273C3.48199 6.34171 3.30794 6.11504 3.09863 5.90625C2.88919 5.69738 2.66103 5.52371 2.44922 5.40625C2.28368 5.31447 2.15648 5.27199 2.07129 5.25684L2 5.25L1.92285 5.24609C1.54488 5.20747 1.25 4.88816 1.25 4.5C1.25 4.08579 1.58579 3.75 2 3.75L2.07129 3.74316C2.15648 3.72801 2.28369 3.68552 2.44922 3.59375C2.66103 3.47629 2.88919 3.30262 3.09863 3.09375C3.30794 2.88496 3.48199 2.65829 3.59961 2.44727C3.72242 2.2269 3.75586 2.07446 3.75586 2C3.75586 1.58579 4.09165 1.25 4.50586 1.25Z"
          fill="currentColor"
        />
      </svg>
    );
  }
}
