import { NextureIconsProps, sizeHelper, strokeSizeHelper } from "../nexture-icons";

export default function NiShieldCross({
  className,
  variant = "outlined",
  size = "medium",
  oneTone = false,
}: NextureIconsProps) {
  const iconSize = sizeHelper(size);
  const iconStrokeWidth = strokeSizeHelper(iconSize);

  if (variant === "outlined") {
    return (
      <svg
        width={iconSize}
        height={iconSize}
        className={className}
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M17.2473 2.89928C18.611 3.26294 19.6216 4.41197 19.8081 5.81096L20.2059 8.79417C20.4009 10.2565 20.3767 11.7398 20.1342 13.1951V13.1951C19.7296 15.6227 18.3382 17.7745 16.2904 19.1397L13.2099 21.1934C12.4772 21.6818 11.5228 21.6818 10.7901 21.1934L7.70956 19.1397C5.66181 17.7745 4.27045 15.6227 3.86584 13.1951V13.1951C3.6233 11.7398 3.59913 10.2565 3.79411 8.79417L4.19187 5.81096C4.3784 4.41197 5.38898 3.26294 6.75269 2.89928L7.00296 2.83254C10.2771 1.95944 13.7229 1.95944 16.997 2.83254L17.2473 2.89928Z"
          stroke="currentColor"
          strokeWidth={iconStrokeWidth}
        />
        <path
          opacity={oneTone ? 1 : 0.6}
          d="M10.0001 9L12.0001 11M12.0001 11L14.0002 13.0001M12.0001 11L14.0001 9M12.0001 11L10 13.0001"
          stroke="currentColor"
          strokeWidth={iconStrokeWidth}
          strokeLinecap="round"
        />
      </svg>
    );
  } else {
    return (
      <svg
        width={iconSize}
        height={iconSize}
        className={className}
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M6.80961 2.10711C10.2103 1.20027 13.7898 1.20033 17.1905 2.10711L17.4405 2.17449C19.097 2.61624 20.325 4.01224 20.5518 5.7116L20.9493 8.695C21.154 10.231 21.1288 11.7895 20.8741 13.318C20.4354 15.9499 18.927 18.2832 16.7071 19.7634L13.626 21.8171C12.6415 22.4733 11.3586 22.4734 10.3741 21.8171L7.29398 19.7634C5.07395 18.2832 3.56471 15.95 3.12602 13.318C2.87131 11.7895 2.84606 10.231 3.05082 8.695L3.44828 5.7116C3.67501 4.01229 4.90314 2.6163 6.55961 2.17449L6.80961 2.10711ZM14.5303 8.46941C14.2374 8.1768 13.7626 8.1767 13.4698 8.46941L12 9.93914L10.5303 8.46941C10.2374 8.1768 9.76258 8.17671 9.46977 8.46941C9.19529 8.74393 9.17795 9.17875 9.41801 9.47332L9.46977 9.52996L10.9395 10.9997L9.46977 12.4694C9.17696 12.7622 9.17713 13.237 9.46977 13.53C9.76266 13.8228 10.2374 13.8229 10.5303 13.53L12 12.0602L13.4698 13.53C13.7626 13.8228 14.2374 13.8228 14.5303 13.53C14.8231 13.2371 14.8232 12.7623 14.5303 12.4694L13.0606 10.9997L14.5303 9.52996C14.8231 9.23705 14.8232 8.76227 14.5303 8.46941Z"
          fill="currentColor"
        />
        <path
          opacity={oneTone ? 0 : 0.4}
          d="M13.4698 8.46965C13.7627 8.17677 14.2375 8.1768 14.5304 8.46965C14.8232 8.76254 14.8232 9.2373 14.5304 9.5302L13.0606 10.9999L14.5304 12.4697C14.8232 12.7625 14.8232 13.2373 14.5304 13.5302C14.2375 13.8231 13.7627 13.8231 13.4698 13.5302L12.0001 12.0605L10.5304 13.5302C10.2375 13.8231 9.7627 13.8231 9.46981 13.5302C9.17697 13.2373 9.17693 12.7625 9.46981 12.4697L10.9395 10.9999L9.46981 9.5302L9.41805 9.47356C9.17779 9.17899 9.19526 8.74424 9.46981 8.46965C9.76269 8.17677 10.2375 8.1768 10.5304 8.46965L12.0001 9.93938L13.4698 8.46965Z"
          fill="currentColor"
        />
      </svg>
    );
  }
}
