import { NextureIconsProps, sizeHelper, strokeSizeHelper } from "../nexture-icons";

export default function NiMessageCheck({
  className,
  variant = "outlined",
  size = "medium",
  oneTone = false,
}: NextureIconsProps) {
  const iconSize = sizeHelper(size);
  const iconStrokeWidth = strokeSizeHelper(iconSize);

  if (variant === "outlined") {
    return (
      <svg
        width={iconSize}
        height={iconSize}
        className={className}
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M16.1899 2.46542C19.0216 2.78005 21.2817 4.97064 21.6846 7.7911C21.8939 9.25619 21.8939 10.7436 21.6846 12.2087C21.2817 15.0292 19.0216 17.2197 16.1899 17.5344L15.3667 17.6258C13.7801 17.8021 12.1831 17.8534 10.5904 17.7797C10.2263 17.7628 9.8785 17.9374 9.6821 18.2444L7.84289 21.1197C7.30446 21.9615 6.00049 21.5801 6.00049 20.5808V17.7058C6.00049 17.3083 5.76109 16.9548 5.41544 16.7583C3.77283 15.8249 2.5957 14.1689 2.31567 12.2087C2.10637 10.7436 2.10637 9.25619 2.31567 7.7911C2.71859 4.97064 4.9787 2.78005 7.81037 2.46542L8.63356 2.37396C10.871 2.12535 13.1292 2.12535 15.3667 2.37396L16.1899 2.46542Z"
          stroke="currentColor"
          strokeWidth={iconStrokeWidth}
        />
        <path
          opacity={oneTone ? 1 : 0.6}
          d="M15 8L11.8423 11.5979C11.6514 11.8154 11.3162 11.8259 11.112 11.6206L9.5 10"
          stroke="currentColor"
          strokeWidth={iconStrokeWidth}
          strokeLinecap="round"
        />
      </svg>
    );
  } else {
    return (
      <svg
        width={iconSize}
        height={iconSize}
        className={className}
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M8.5502 1.62852C10.8426 1.37384 13.1572 1.37381 15.4496 1.62852L16.2729 1.71934C19.444 2.07192 21.9756 4.52569 22.4272 7.68419C22.6465 9.21936 22.6464 10.7789 22.4272 12.3141C21.9759 15.4729 19.4442 17.9262 16.2729 18.2789L15.4496 18.3707C13.8242 18.5513 12.1876 18.6044 10.5561 18.5289C10.452 18.5241 10.3615 18.574 10.3139 18.6481L8.47501 21.5231C7.53278 22.9961 5.25058 22.3292 5.2504 20.5807V17.7057C5.2502 17.6202 5.19437 17.4951 5.04434 17.4098C3.20552 16.3647 1.88635 14.5099 1.57266 12.3141C1.35342 10.7789 1.35335 9.21938 1.57266 7.68419C2.0243 4.52555 4.55661 2.07171 7.72794 1.71934L8.5502 1.62852ZM15.4945 7.43614C15.2028 7.18041 14.7679 7.19123 14.4897 7.44981L14.4359 7.5045L11.4545 10.901L10.0316 9.47032C9.73952 9.17703 9.26368 9.17546 8.97012 9.46739C8.67659 9.75936 8.6755 10.2352 8.96719 10.5289L10.5795 12.149C11.0898 12.6621 11.9283 12.6363 12.4057 12.0924L15.5629 8.49473L15.6107 8.43419C15.8312 8.12473 15.7861 7.69232 15.4945 7.43614Z"
          fill="currentColor"
        />
        <path
          opacity={oneTone ? 0 : 0.4}
          d="M15.4951 7.43632C15.7867 7.69252 15.8318 8.1249 15.6113 8.43437L15.5634 8.49491L12.4062 12.0926C11.9289 12.6365 11.0904 12.6623 10.58 12.1492L8.96774 10.5291C8.67568 10.2354 8.67702 9.75966 8.97067 9.46757C9.26435 9.17551 9.7401 9.17684 10.0322 9.4705L11.455 10.9012L14.4365 7.50468L14.4902 7.44999C14.7685 7.19129 15.2033 7.18024 15.4951 7.43632Z"
          fill="currentColor"
        />
      </svg>
    );
  }
}
