import { NextureIconsProps, sizeHelper, strokeSizeHelper } from "../nexture-icons";

export default function NiExpandSquare({
  className,
  variant = "outlined",
  size = "medium",
  oneTone = false,
}: NextureIconsProps) {
  const iconSize = sizeHelper(size);
  const iconStrokeWidth = strokeSizeHelper(iconSize);

  if (variant === "outlined") {
    return (
      <svg
        width={iconSize}
        height={iconSize}
        className={className}
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M14.9841 2.33156C18.5012 2.72235 21.2776 5.4988 21.6684 9.01592V9.01592C21.8888 10.9992 21.8888 13.0008 21.6684 14.9841V14.9841C21.2776 18.5012 18.5012 21.2776 14.9841 21.6684V21.6684C13.0008 21.8888 10.9992 21.8888 9.01591 21.6684V21.6684C5.4988 21.2776 2.72235 18.5012 2.33156 14.9841V14.9841C2.1112 13.0008 2.1112 10.9992 2.33156 9.01591V9.01591C2.72236 5.4988 5.4988 2.72235 9.01592 2.33156V2.33156C10.9992 2.1112 13.0008 2.1112 14.9841 2.33156V2.33156Z"
          stroke="currentColor"
          strokeWidth={iconStrokeWidth}
        />
        <path
          opacity={oneTone ? 1 : 0.6}
          d="M16.5 10.5L16.5 8.00019C16.5 7.72405 16.2762 7.50019 16 7.50019L13.5 7.50016M9.00001 15.0004L16.0005 7.99997M11 16L8.49996 16C8.22382 16 7.99997 15.7761 7.99997 15.5L7.99997 13.0002"
          stroke="currentColor"
          strokeWidth={iconStrokeWidth}
          strokeLinecap="round"
        />
      </svg>
    );
  } else {
    return (
      <svg
        width={iconSize}
        height={iconSize}
        className={className}
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M9.23143 2.55271C11.0712 2.34831 12.9288 2.34833 14.7685 2.55271C18.2823 2.94328 21.0557 5.71762 21.4463 9.23142C21.6507 11.0713 21.6507 12.9286 21.4463 14.7685C21.0557 18.2823 18.2823 21.0557 14.7685 21.4463C12.9287 21.6507 11.0712 21.6507 9.23143 21.4463C5.71775 21.0556 2.94329 18.2822 2.55272 14.7685C2.34831 12.9287 2.34831 11.0713 2.55272 9.23142C2.94322 5.71761 5.71766 2.94334 9.23143 2.55271ZM13.5 6.74997C13.086 6.75012 12.7502 7.08599 12.75 7.49997C12.7501 7.91403 13.0859 8.24982 13.5 8.24997H14.6894L8.74998 14.1894V13C8.74977 12.586 8.41393 12.2501 7.99998 12.25C7.61165 12.2501 7.29217 12.5455 7.25389 12.9238L7.24998 13V15.5C7.25006 16.1902 7.80974 16.7499 8.49998 16.75H11C11.4141 16.7499 11.7499 16.4141 11.75 16C11.7499 15.5858 11.4141 15.2501 11 15.25H9.81053L15.75 9.31052V10.5L15.7539 10.5761C15.7923 10.9544 16.1116 11.25 16.5 11.25C16.9142 11.2499 17.25 10.9142 17.25 10.5V7.99997C17.2499 7.30976 16.6902 6.75002 16 6.74997H13.5Z"
          fill="currentColor"
        />
        <path
          opacity={oneTone ? 0 : 0.4}
          d="M16.5 11.2499C16.9142 11.2499 17.2499 10.9142 17.2499 10.5L17.2499 8.00028C17.2499 7.30995 16.6903 6.75045 16 6.75041L13.5003 6.75041C13.0861 6.7504 12.7504 7.08611 12.7504 7.50033C12.7504 7.91448 13.0861 8.25024 13.5003 8.25025L14.6894 8.25025L8.75011 14.1895L8.75011 13.0004C8.75011 12.5863 8.41428 12.2507 8.00019 12.2505C7.61178 12.2505 7.29201 12.5455 7.25373 12.9238L7.25027 13.0004L7.25027 15.5002C7.25035 16.1904 7.80984 16.75 8.50014 16.75L10.9999 16.75C11.4141 16.75 11.7498 16.4143 11.7498 16.0001C11.7498 15.5859 11.4141 15.2502 10.9999 15.2502L9.81077 15.2502L15.7501 9.31091L15.7501 10.5L15.7535 10.5767C15.7919 10.9549 16.1116 11.2499 16.5 11.2499Z"
          fill="currentColor"
        />
      </svg>
    );
  }
}
