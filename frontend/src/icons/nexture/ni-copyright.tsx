import { NextureIconsProps, sizeHelper, strokeSizeHelper } from "../nexture-icons";

export default function NiCopyright({
  className,
  variant = "outlined",
  size = "medium",
  oneTone = false,
}: NextureIconsProps) {
  const iconSize = sizeHelper(size);
  const iconStrokeWidth = strokeSizeHelper(iconSize);

  if (variant === "outlined") {
    return (
      <svg
        width={iconSize}
        height={iconSize}
        className={className}
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M14.9841 2.33156C18.5012 2.72235 21.2776 5.4988 21.6684 9.01592V9.01592C21.8888 10.9992 21.8888 13.0008 21.6684 14.9841V14.9841C21.2776 18.5012 18.5012 21.2776 14.9841 21.6684V21.6684C13.0008 21.8888 10.9992 21.8888 9.01591 21.6684V21.6684C5.4988 21.2776 2.72235 18.5012 2.33156 14.9841V14.9841C2.1112 13.0008 2.1112 10.9992 2.33156 9.01591V9.01591C2.72236 5.4988 5.4988 2.72235 9.01592 2.33156V2.33156C10.9992 2.1112 13.0008 2.1112 14.9841 2.33156V2.33156Z"
          stroke="currentColor"
          strokeWidth={iconStrokeWidth}
        />
        <path
          opacity={oneTone ? 1 : 0.6}
          d="M15 8.27316C14.1508 7.48142 13.0294 7 11.8 7C9.14903 7 7 9.23858 7 12C7 14.7614 9.14903 17 11.8 17C13.0294 17 14.1508 16.5186 15 15.7268"
          stroke="currentColor"
          strokeWidth={iconStrokeWidth}
          strokeLinecap="round"
        />
      </svg>
    );
  } else {
    return (
      <svg
        width={iconSize}
        height={iconSize}
        className={className}
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M8.93253 1.58608C10.9706 1.35964 13.0282 1.35967 15.0663 1.58608C18.9318 2.01566 21.9833 5.06729 22.413 8.93276C22.6395 10.971 22.6394 13.0283 22.413 15.0665C21.9835 18.9322 18.932 21.9836 15.0663 22.4132C13.0282 22.6397 10.9707 22.6397 8.93253 22.4132C5.06707 21.9835 2.01537 18.9321 1.58585 15.0665C1.35942 13.0284 1.35939 10.9709 1.58585 8.93276C2.01552 5.06735 5.06714 2.0158 8.93253 1.58608ZM11.7997 6.25014C8.70607 6.25025 6.24991 8.85372 6.24991 12.0001C6.24997 15.1465 8.7061 17.75 11.7997 17.7501C13.1407 17.7501 14.3687 17.2569 15.3241 16.4425L15.5116 16.2755C15.8143 15.9932 15.8307 15.5189 15.5487 15.216C15.2838 14.9318 14.8496 14.899 14.5468 15.129L14.4882 15.1789C13.7695 15.8487 12.8279 16.2501 11.7997 16.2501C9.59164 16.25 7.74997 14.3764 7.74991 12.0001C7.74991 9.62385 9.59161 7.75025 11.7997 7.75014C12.8279 7.75017 13.7695 8.15158 14.4882 8.82143C14.7912 9.1038 15.2663 9.08725 15.5487 8.78432C15.8133 8.50017 15.815 8.06531 15.5644 7.77944L15.5116 7.72475L15.3241 7.55776C14.3687 6.74343 13.1407 6.25016 11.7997 6.25014Z"
          fill="currentColor"
        />
        <path
          opacity={oneTone ? 0 : 0.4}
          d="M6.25 12C6.25 8.85358 8.70616 6.25011 11.7998 6.25C13.1408 6.25 14.3687 6.74327 15.3242 7.55762L15.5117 7.72461L15.5645 7.7793C15.8152 8.06516 15.8134 8.49999 15.5488 8.78418C15.2664 9.08715 14.7912 9.10375 14.4883 8.82129C13.7696 8.15142 12.828 7.75 11.7998 7.75C9.5917 7.75011 7.75 9.62371 7.75 12C7.75 14.3763 9.5917 16.2499 11.7998 16.25C12.828 16.25 13.7696 15.8486 14.4883 15.1787L14.5469 15.1289C14.8497 14.8988 15.2839 14.9317 15.5488 15.2158C15.8309 15.5187 15.8144 15.993 15.5117 16.2754L15.3242 16.4424C14.3687 17.2567 13.1408 17.75 11.7998 17.75C8.70616 17.7499 6.25 15.1464 6.25 12Z"
          fill="currentColor"
        />
      </svg>
    );
  }
}
